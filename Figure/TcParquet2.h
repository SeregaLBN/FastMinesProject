////////////////////////////////////////////////////////////////////////////////
//                               FastMines project
//                                                   (C) Sergey Krivulya (KSerg)
// file name: "TcParquet2.h"
//
// Описание класса TcParquet2
////////////////////////////////////////////////////////////////////////////////

#ifndef FILE_TCPARQUET2
#define FILE_TCPARQUET2

#include ".\TcBase.h"

//////////////////////////////////
//        /:\     / \     /:\     / \
//    0   \:::\ /:\   \ / \:::\ /:\   \ / \
//        /:\:/:::/ \ /   /:\:/:::/ \ /   /    -   вид поля
//    1 /:::/:\:/   / \ /:::/:\:/   / \ /
//      \:/ \:::\ /:\   \:/ \:::\ /:\   \
//    2   \   \:/ \:::\ /:\   \:/ \:::\ /:\
//        / \ /   /:\:/:::/ \ /   /:\:/:::/
//    3 /   / \ /:::/:\:/   / \ /:::/:\:/
//      \ / \   \:/ \:::\ /:\   \:/ \:::\
//    4   \:::\ /:\   \:/ \:::\ /:\   \:/ \
//        /:\:/:::/ \ /   /:\:/:::/ \ /   /
//    5 /:::/:\:/   / \ /:::/:\:/   / \ /
//      \:/ \:::\ /:\   \:/ \:::\ /:\   \
//    6   \   \:/ \:::\ /:\   \:/ \:::\ /:\
//        / \ /   /:\:/:::/ \ /   /:\:/:::/
//    7 /   / \ /:::/:\:/   / \ /:::/:\:/
//      \ / \   \:/ \:::\ / \   \:/ \:::\
//    1       \ /     \:/     \ /     \:/
//        0   1   2   3   4   5   6   7
//////////////////////////////////
//                       POINT regionOut[4]
//               0
//              / \
//            /     \
//          /       / 1
//      3 /       /
//        \     /     this->direction == 1 or 2
//          \ /
//           2
//          0
//         / \ 
//       /     \      this->direction == 0 or 3
//     3 \       \
//         \       \ 1
//           \     /
//             \ /
//              2
//
//////////////////////////////////
//     POINT neighbor[7]
//
//
//     this->direction == 0              this->direction == 1
//                / \                                    /:\ 
//              /  1  \                                /::1::\
//    /:\     /       / \                    / \     /:::::::/
//  /::0::\ / x,    /  2  \                /  0  \ /:x+1,::/
//  \:::::::\ y-1 /:\       \            /:\       \:y-1:/ \
//    \:::x-1,\ /:this\   x+1,\        /::2::\   x,  \:/  3  \
//      \:y-1:/ \:::::::\ y-1 /:\      \:::::::\ y-1 /:\       \
//        \:/  3  \::x, y:\ /::4::\      \:::x-1,\ /this:\   x+1,\
//        /       /:\:::::/:::::::/      /:\:y:::/:::::::/:\ y   /
//      / x-1,  /::5::\:/:x+1,::/      /::4::\:/::x, y:/  6  \ /
//      \ y   /:::::::/:\:y:::/      /:::::::/:\:::::/       /
//        \ /:x,::::/::6::\:/      /:x-1,::/::5::\:/ x+1,  /
//          \:y+1:/ \:::::::\      \:y+1:/ \:::::::\ y+1 /
//            \:/     \:::x+1,\      \:/     \:::x,::\ /
//                      \:y+1:/                \:y+1:/
//                        \:/                    \:/
//
//     this->direction == 2              this->direction == 3
//                /:\                    /:\
//              /::1::\                /::0::\
//            / \:::::::\     /:\      \:::::::\     /:\
//          /  0  \:::x,::\ /::2::\      \:::x-1,\ /::1::\
//        /       /:\:y-1:/:::::::/      /:\:y-1:/:::::::/ \
//      / x-1,  /this:\:/:x+1,::/      /::2::\:/:x,::::/  3  \
//    / \ y-1 /:::::::/:\:y-1:/      /:::::::/:\:y-1:/       /
//  /  3  \ /::x, y:/::4::\:/      /:x-1,::/:this\:/ x+1,  /
//  \       \:::::/ \:::::::\      \:y:::/ \:::::::\ y   /:\
//    \   x-1,\:/  6  \:::x+1,\      \:/  4  \:::x+1,\ /::6::\
//      \ y   /:\       \:y:::/        \       \:y:::/ \:::::::\
//        \ /::5::\   x,  \:/            \   x-1,\:/  5  \:::x+1,\
//        /:::::::/ \ y+1 /                \ y+1 /       / \:y+1:/
//      /:x-1,::/     \ /                    \ / x,    /     \:/
//      \:y+1:/                                \ y+1 /
//        \:/                                    \ /
//////////////////////////////////

namespace nsFigure {

class TcParquet2: public TB{
public:
   static POINT GetSizeFieldInPixel(const POINT&, const int&);
   static int SizeInscribedSquare(int);
   static float GetPercentMine(TeSkillLevel); // процент мин на заданном уровне сложности
private:
   POINT neighbor[7]; // кординаты соседей; если соседа нет, то координаты отрицательны
   POINT regionOut[4]; // координаты 4x точек из которых состоит прямoугольник
   int direction;
public:
   TcParquet2(const POINT&, const POINT&, const int&);
   int   GetNeighborNumber() const;
   POINT GetNeighborCoord(int) const;
   bool ToBelong(int, int); // принадлежат ли эти экранные координаты ячейке
   void SetPoint(const int&); // определить координаты точек из которых состоит фигура
   void Paint() const;
};

} // namespace nsFigure

#endif // FILE_TCPARQUET2

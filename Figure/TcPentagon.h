////////////////////////////////////////////////////////////////////////////////
//                               FastMines project
//                                                   (C) Sergey Krivulya (KSerg)
// file name: "TcPentagon.h"
//
// Описание класса TcPentagon - равносторонний 5-ти угольник
////////////////////////////////////////////////////////////////////////////////

#ifndef FILE_TCPENTAGON
#define FILE_TCPENTAGON

#include ".\TcBase.h"

//////////////////////////////////
//                                B = regionOut[4]
//  POINT regionOut[5]                   ###
//                                     #########
//                                 #### #  ##   ####
//                           a  ###   ##   # #      ###  a
//                           ###     #     # #         ###
//                        ###      ##      #  #           ###
//                    ####        #        #  #              ####
//regionOut[3]=C  ###         x #         #   #                 ###
//               ##            ##          #   #                    ##A = regionOut[0]
//                ##          #          h #    #                   #
//                # #       ##             #    #                   #
//                 # ##    #               #     #                 #
//                 #   # ##                #     # d              #
//                  #   # M                #      #               #
//                   #   ##                #       #             #
//                   #     #               #       #            #
//                    #     ##           N #        #           #
//                  a #       #  L         ###      #          # a
//                     #       ##          #  #      #        #
//                      #        #         #   #     #        #
//                      #         ##       #    ##    #      #
//                       #          #      #    b #   #     #
//                        #          #     #       ##  #    #
//                        #           ##   #         # #   #
//                         #            #  #          # # #
//                         #             # #           ## #
//         regionOut[2]=D  ##############################
//                                         O             E = regionOut[1]
//                                         a
// Фигура симметрична относительно вертикали   
//
// Формулы:
// 
//  d = a*(2^0.5)
//  h = a/2 * (7^0.5)
//  S = L^2
//  b = a/(2^0.5)
//  x = L-b/2
//  L = a/2*(4+7^0.5)^0.5 = a/2*(1+7^0.5)/(2^0.5)
//  a = 2*L/((4+7^0.5)^0.5) = 2*S^0.5/((4+7^0.5)^0.5)
//
// Линии:
// OM == MB
//
// Углы:
// DCB == EAB == OMB == 90°
// DOC == COB == OEN == EBA == BEA == 45°
//
//
//
//                                       (b+L; 0)
//                                         ###
//                                       ##   #####
//     (b/2; b/2)                       #          ####
//                                    ##               #####    (b/2+2*L;
//         ##                        #________________      ###    b/2)
//        #  ####                  ##|(b/2+L;         |      #
//        #      ####    (L; b)  ##  | b/2)           |      #
//       #           ###        #    |                |     #
//       #              ####  ##     |                |     #
//      #    _______________##       |      1, 0      |    #
//     #    |(b/2; b)        |#      |                |   #
//     #    |                |#      |                |   #
//    #     |                | #     |                |  #
//    #     |                | #     |        (2*L; L)|  #
//   #      |      0, 0      |  #    |________________| #
//   #      |                |  #                      #
//  #(0; L) |                |   #                    ##  (2*L; L)
//   ##     |                |    # (b/2+L;       ####  ##
//     ##   |      (L; b/2+L)|    #  b/2+L)   ####        ##
//       ## |________________|     #      ####              #
//         #                       #  ####                   #
//          ##                    ####       ________________ ##
//            ##            ######   #      |(b+L;           |  ##
//          (b; ##    ######         #      | b/2+L)         |    ##  (b+2*L;
//           b+L) ####                #     |                |      #  b+L)
//                #_______________     #    |                |     #
//               #|(b; b+L)       |    #    |      1, 1      |     #
//              # |               |     #   |                |    #
//              # |               |     #   |                |    #
//             #  |               |      #  |       (b/2+2*L;|   #
//            #   |     0, 1      |       # |            2*L)|   #
//            #   |               |       # |________________|  #
//           #    |               |        ###                  #
//           #    |        (b/2+L;|      ##   #####            #
//          #     |       b/2+2*L)|     #  (b+L;   ####        #
//   (b/2;  #     |_______________|   ##    2*L)       #####  #
// b/2+2*L)##                       #                      ###
//           ####                  #                       (b/2+2*L;
//               ####            #                          b/2+2*L)
//                   ###        #
//                      ####  ##
//                         ###
//                      (L; b+2*L)
//
//////////////////////////////////
//  
//                     ##                        ##          
//                    #  ####                   #--###       
//                   # 2     ###               #------###    
//     ##           #           ###           #----------##  
//     # ##         #          3 #-##        #------------#  
//    # 3  ###     #            #----##     #------------#   
//    #       ##  #             #------##  #-------------#   
//    #         ##             #---------##-------------#    
//   #         4 # 1           #----------#-------------#    
//   #            #            #-----------#------------#    
//   #            #           #------------#-----------#     
//   #            #           #------------#-----------#     
//  #              #       4 #--------------#---------#      
//  # 2            #        ##--------------#--------##      
//   #             # 0   ###  #-------------#-----###--#     
//    #           0 # ###    1 #-------------#-###------#    
//     ##          ###          ##----------###----------##  
//       #  1   ### # 0           #------###-#-------------# 
//        #  ###   0 #             #--###-----#-------------#
//         ##        #            2 ##--------#-------------;
//         #         #              #----------#------------;
//        # 4         #            #-----------#------------#
//        #           #            #------------#-----------#
//       #            #            #------------#-----------#
//       #           1 # 4        #--------------#---------# 
//       #             ##         #--------------##--------# 
//      #             #--##       #-------------#  ##------# 
//      #            #-----###  3 #------------#     ##----# 
//     #  3         #---------## #------------#        ##-#  
//     ##           #-----------###----------#           ##  
//     #-####    2 #-------------# ###------#             #  
//    #------###  #-------------#     ###--#             #   
//    #---------##--------------#        ##              #   
//    #----------#-------------#          #             #    
//   #------------#------------#           #            #    
//   #------------#-----------#            #           #     
//   #------------#-----------#            #           #     
//  #--------------#---------#              #         #      
//  #--------------#--------##              #        ##      
//   #-------------#-----###--#             #     ###  #     
//    #-------------#-###------#             # ###      #    
//     #-----------###----------#           ###          #   
//      #--------##-#------------#        ## #            #  
//       #-----##----#------------#     ##    #            # 
//        #--##------#-------------#  ##      #             #
//         ##--------#--------------##         #             
//         #----------#-------------#          #             
//        #-----------#------------#            #           #
//        #-----------#------------#            #           #
//       #-------------#-----------#             #          #
//       #-------------##---------#              ##        # 
//      #-------------#  ##-------#             #  ##      # 
//      #------------#     ###----#            #     ##    # 
//     #------------#         ##-#            #        ## #  
//     ##-----------#           ###          #           ##  
//       ####------#               ###      #                
//           ###--#                   ###  #                 
//      
//////////////////////////////////
//
//  POINT neighbor[6]
//
//       this->direction == 0                               this->direction == 1
//           #                                                     ##
//         ## #                                                  ##  #
//       ##    #                                               ##     #
//     ##       #       ##                                  ###    1   #       ##
//     #    0    #  #### #                               ### #          #  #### #
//      #         ##      #                             #     #  x, y-1  ##      #
//      #x-1, y-1 #   1   #                            #   0  #          #   2   #
//      #        #         #                          #        #        #         #
//       #       #         #                          #x-1, y-1#        # x+1, y-1#
//       ##      #  x, y-1  ##                       #          ##      #          #
//      #  ##    #         #::##                     #         #::##    #         #
//     #     ## #         #:::::##                  #         #:::::## #         #
//    #   2    ###       #:::3::::#                 ##       #::::::::###       #
//   #          #:####  #:::::::::#                 #:####  #:::this:::# ####  #
//  #          #::::::##:::::::::#                 #::::::##::::::::::#      ##
//  #  x-1, y  #:::::::#::x+1, y:#                 #:::3:::#::::::::::#   4   #
//   #        #::this:::#::::::::#                 #::::::::#::x, y::#         #
//   #        #:::::::::#::::::::#                 #::::::::#::::::::#         #
//    #      #::::x, y::#:::::::#                 #:x-1, y::#:::::::#  x+1, y  #
//    #     ##::::::::::#::::::##                 #:::::::::#::::::##          #
//     # ###  #::::::::::# ####::#                 #:::::::::#:####::#          #
//     ##      #::::::::###:::::::#                 #::::::::##:::::::#        ##
//     #    4   #:::::##:#:::::6:::#                 #:::::###::::6::::#     ##
//      #        #::##::::#:::::::::#                 #::##:::#:::::::::#  ##
//      #         ##::::::#::::::::::#                 ##:::::#::x, y+1::##
//      #         #::::5:::#:x+1, y+1#                 #::5::::#:::::::::#
//      #x-1, y+1#:::::::::#::::::::#                 #::::::::#::::::::#
//       #       #::::::::::#::::::#                 #:x-1, y+1:#:::::::#
//        #      #::x, y+1::##:::::#                 #::::::::::##::::::#
//         #### #::::::::::#  ###:#                 #::::::::::#  ####:#
//             ###::::::::#      ##                 ##::::::::#       ##
//                ##:::::#                            ##:::::#
//                  ##::#                               ##::#
//                    ##                                  ##
//
//       this->direction == 2                               this->direction == 3
//                          ##                                  ##
//                         #::##                               #::##
//                        #::1::##                            #:::::##
//              ##       #::::::::##                ##       #::1:::::###
//             #::####  #:::::::::#                 #:####  #:::::::::#  ####
//             #::0:::##:x+1, y-1:#                #::::::##::x, y-1::#      #
//            #::::::::#:::::::::#                 #::0::::#:::::::::#    2   #
//            #:x, y-1::#::::::::#                 #::::::::#::::::::#         #
//           #::::::::::#:::::::#                 #x-1, y-1:#:::::::# x+1, y-1 #
//           #::::::::::#::::::##                 #:::::::::#::::::##          #
//         ## #:::::::::#::::##::#                 #::::::::#::::##::#         #
//       ##    ##::::::::#:##:::::#                 #::::::::#:##:::::#         #
//     ##   2    #::::::###::::3:::#                 #::::::###::this::#       ##  
//     #          #::###:#::::::::::#                 #::###:#::::::::::#  #### #
//      #  x-1, y  ##:::::#::x+1, y::#                 ##:::::#::::::::::##      #
//      #          #::::::#::::::::::#                 #::3:::#:::x, y:::#       #
//      #         #::this::#::::::::#                 #::::::::#::::::::#    4    #
//      #         #::::::::#::::::::#                 #:x-1, y:#::::::::#         #
//       #       #:::x, y:::#:::::::#                #::::::::::#:::::::#  x+1, y  #
//       ##      #::::::::::##::::::#                #::::::::::##::::::#          #
//      #  #### #::::::::::#  ####:#                #::::::::::#  ####:#          #
//     #       ###::::::::#       ##                ##::::::::#       ###        #
//    #   4     # ##:::::#   6     #                  ##:::::#  5      # ##     #
//   #         #    ##::#         #                     ##::#         #    ##  #
//  # x-1, y+1 #      ## x+1, y+1 #                       ##  x, y+1  #  6   ##
//  #         #   5    #         #                         #         #        #
//   #        #         #        #                          #        # x+1, y+1#
//   #       #  x, y+1  #       #                           #       #          #
//    #      #          #      #                            #      ##          #
//    #    ## #         #    ##                             #    ##  #         #
//     # ##    ##        # ##                                # ##     #         #
//     ##        #      ###                                  ##        #       ##
//                #  ###                                                #  ####
//                 ##                                                    ##
//
//////////////////////////////////

namespace nsFigure {

class TcPentagon: public TB{
private:
   static float b;
   static float L;
public:
   static POINT GetSizeFieldInPixel(const POINT&, const int&);
   static int SizeInscribedSquare(int);
   static float GetPercentMine(TeSkillLevel); // процент мин на заданном уровне сложности
private:
   POINT neighbor[7]; // кординаты соседей; если соседа нет, то координаты отрицательны
   POINTFLOAT regionOut[5]; // координаты 5ти точек из которых состоит фигура
   int direction;
public:
   TcPentagon(const POINT&, const POINT&, const int&);
   int   GetNeighborNumber() const;
   POINT GetNeighborCoord(int) const;
   bool ToBelong(int, int); // принадлежат ли эти экранные координаты ячейке
   void SetPoint(const int&); // определить координаты точек из которых состоит фигура
   void Paint() const;
};

} // namespace nsFigure

#endif // FILE_TCPENTAGON

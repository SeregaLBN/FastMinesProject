apply plugin: 'java'
apply plugin: 'application'

/** /
// see https://plugins.gradle.org/plugin/com.palantir.graal
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.palantir.graal:gradle-graal:0.3.0-37-g77aa98f"
    }
}
apply plugin: 'com.palantir.graal'

graal {
//    //mainClass 'com.palantir.test.Main'
//    //outputName 'hello-world'
//    //graalVersion '1.0.0-rc5'
    graalVersion '1.0.0-rc16'
    downloadBaseUrl 'https://github.com/oracle/graal/releases/download/'
//    //graalVersion '19.0.0'
//    //option '-H:EnableURLProtocols=http'
//    //option '-H:Name=foo'
}
/**/

if (JavaVersion.current().isJava11Compatible()) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
} else {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = "UTF-8"

group = 'FastMinesGame' // fmg
mainClassName = "fmg.swing.app.FastMinesSwing"
version = '2.1.1'

jar {
    excludes = [ 'fmApplet.html', 'runNativeImageAgent.sh' ]
    if (!org.gradle.internal.jvm.Jvm.current().toString().contains("GraalVM"))
        excludes += [ 'META-INF/native-image' ]

    manifest {
        attributes 'Main-Class': mainClassName,
                   'Title'     : 'FastMines game - Java SWING desktop application',
                   'Version'   : archiveVersion,
                   'Vendor'    : 'SeregaLBN',
                   'Build-Date': new Date().format("yyyy-MM-dd'T 'HH:mm:ss.SSSZZ")
    }
//    into('res') {
//        from '../res'
//        exclude '**/*~*'
//        include '**/*.png'
//    }
}

sourceSets {
    main {
        java {
            srcDir '../src/src_platform_swing'
            srcDir 'src/main/java'
            include '**/*.java'
        }
        resources {
            srcDir 'src/main/resources'
//          srcDir '../res'
//          exclude '**/*~*'
//          include '**/*.gif'
//          include '**/*.jpeg'
//          include '**/*.jpg'
//        //include '**/*.ico'
//          include '**/*.png'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
            srcDir '../src/test_swing'
            include '**/*.java'
        }
    }
}


dependencies {
    compile project(':FastMines_core')

    // !! do not use external dependencies to minimize assembly size

    testImplementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    testImplementation project(':FastMines_core').sourceSets.test.output
    testImplementation 'junit:junit:4.13'
}

test.dependsOn(":FastMines_core:test")

task runDemoApp(type: JavaExec) {
    group = 'Execution'
    description = 'Run the demo swing (animation test)'
    classpath = sourceSets.test.runtimeClasspath
    main = 'fmg.swing.app.DemoApp'
}

task runTestDialogs(type: JavaExec) {
    group = 'Execution'
    description = 'Run the demo swing (dailogs test)'
    classpath = sourceSets.test.runtimeClasspath
    main = 'fmg.swing.app.TestDialogs'
}


task fastMinesSwingFatJar(type: Jar) {
    manifest {
        attributes jar.manifest.attributes
    }
    archiveBaseName = 'FastMines_swing-fat'
    from {
        configurations.compile.collect {
            it.isDirectory()
                ? it
                : zipTree(it).matching{exclude{
                    //println it
                    //it.name == 'META-INF'
                    it.toString().contains('!META-INF')
                }}
        }
    }
    with jar
}
project(':FastMines_swing').tasks.fastMinesSwingFatJar.dependsOn project(':FastMines_core' ).tasks.build
project(':FastMines_swing').tasks.build               .dependsOn project(':FastMines_swing').tasks.fastMinesSwingFatJar

task fastMinesSwingGraalNative(dependsOn: fastMinesSwingFatJar) { task ->

    doLast {
        if (!org.gradle.internal.jvm.Jvm.current().toString().contains("GraalVM"))
            // can`t build
            throw new RuntimeException(task.name + ': Unsupported JDK. Can usage GraalVM JDK')

        def isWin = org.gradle.internal.os.OperatingSystem.current().isWindows()

        // pre requirements
        exec {
            commandLine isWin ? 'cmd' : 'sh',
                        isWin ? '/c' : '-c',
                        System.env.GRAALVM_HOME + '/bin/gu install native-image'
        }

        // TODO: if isWin exec from command line etc "p:\ProgramFiles\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        exec {
            // HINT: see            META-INF/native-image/${groupId}/${artifactId}/native-image.properties
            // ./src/main/resources/META-INF/native-image/FastMinesGame/FastMines_swing/native-image.properties
            commandLine isWin ? 'cmd' : 'sh',
                        isWin ? '/c' : '-c',
                        System.env.GRAALVM_HOME + '/bin/native-image' +
                        ' -jar ' + project(':FastMines_swing').buildDir.absolutePath + '/libs/FastMines_swing-fat-' + version + '.jar' +
                        ' -H:Name=FastMines_swing' +
                        (isWin ? ' -H:NativeLinkerOption=prefs.lib' : '') +
                        ' --no-server' +
                        ' --no-fallback'

            // exec > ./FastMines_swing/FastMines_swing(.exe) 
            // > Exception in thread "main" java.lang.IllegalArgumentException: AWT is currently not supported on Substrate VM
            // ;(
            // try in graalvm-ce-java8-19.3.0 (Ubuntu 18.04):
            // try in graalvm-ce-java11-20.1.0 (Win 10)
        }
    }
}

task fastMinesSwingJPackNative(dependsOn: fastMinesSwingFatJar) { task ->
    doLast {
        // tested in Open/Oracle JDK 8

        if (!JavaVersion.current().isJava8())
            // can`t build
            throw new RuntimeException(task.name + ': Unsupported JDK. Can usage JDK 8')

        if (org.gradle.internal.jvm.Jvm.current().toString().contains("GraalVM"))
            // can`t build
            throw new RuntimeException(task.name + ': Unsupported JDK. Can usage Open/Oracle JDK 8')

        def isWin = org.gradle.internal.os.OperatingSystem.current().isWindows()
        exec {
            commandLine isWin ? 'cmd' : 'sh',
                        isWin ? '/c' : '-c',
                        'javapackager -deploy -native image' +
                        ' -BsystemWide=true' +
                        ' -BjvmOptions=-Xmx128m' +
                        ' -BjvmOptions=-Xms128m' +
                        ' -outdir ' + project(':FastMines_swing').buildDir.toPath().resolve('distributionsJPack').toFile().absolutePath +
                        ' -outfile FastMines_swing_' + version +
                        ' -srcdir ' + project(':FastMines_swing').buildDir.absolutePath + '/libs/' +
                        ' -srcfiles FastMines_swing-fat-' + version + '.jar' +
                        ' -appclass ' + mainClassName +
                        ' -description "FastMines game - Java SWING desktop application"' +
                        ' -name FastMines' +
                        ' -title "FastMines"'
        }
    }
}

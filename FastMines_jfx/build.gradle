apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

//#if use Java 11
//    // TODO see https://stackoverflow.com/questions/52569724/javafx-11-create-a-jar-file-with-gradle
//    //          https://stackoverflow.com/questions/52144931/how-to-add-javafx-runtime-to-eclipse-in-java-11
//    // to use only gradle config (without manually set javafx sdk)
//    sourceCompatibility = '1.11'
//    targetCompatibility = '1.11'
//#if else use Java 8
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
//#endif

compileJava.options.encoding = 'UTF-8'

group = 'FastMinesGame' // fmg
mainClassName = "fmg.jfx.app.Main"
version = '0.0.1'

jar {
    manifest {
        attributes 'Main-Class': mainClassName,
                   'Title'     : 'FastMines game - demo Java FX desktop application',
                   'Version'   : version,
                   'Vendor'    : 'SeregaLBN',
                   'Build-Date': new Date().format("yyyy-MM-dd'T 'HH:mm:ss.SSSZZ")
    }
}

//#if use Java 11
//repositories {
//    flatDir {
//        // 1. download https://gluonhq.com/products/javafx/
//        // 2. define system environment variable: example JAVAFX_HOME = youPath/Java/javafx-sdk-11.0.2
//        dirs System.getenv('JAVAFX_HOME') + '/lib'
//        // to run fmg.jfx.app.DemoApp from Eclipse:
//        //   1. open 'Run Configurations'
//        //   2. in tab 'Arguments' in block 'VM arguments' add next
//        //      --module-path "${env_var:JAVAFX_HOME}\lib" --add-modules=javafx.controls
//    }
//}
//#endif

sourceSets {
    main {
        java {
            srcDir '../src/src_platform_jfx'
            include '**/*.java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
            srcDir '../src/test_jfx'
            include '**/*.java'
        }
    }
}

/** /
def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}
/**/

dependencies {
    implementation project(':FastMines_core')

//#if use Java 11
//    compile name: 'javafx.base'
//    compile name: 'javafx.controls'
//    compile name: 'javafx.graphics'
//    testCompile name : 'javafx.swing' //(use in unit test)
//#endif

    //implementation 'org.openjfx:javafx-base:11.0.2:${platform}' // for java 11
    //implementation 'org.openjfx:javafx-graphics:11.0.2:${platform}' // for java 11
    //implementation 'org.openjfx:javafx-controls:11.0.2:${platform}' // for java 11
    //testImplementation 'org.openjfx:javafx-swing:11.0.2:${platform}' // for java 11 (use in unit test)
    testImplementation project(':FastMines_core').sourceSets.test.output

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'io.reactivex.rxjava2:rxjava:2.2.8'
}

eclipse.classpath {
    file.whenMerged {
        entries.each { source ->
            if (source.kind == 'con' && source.path.startsWith('org.eclipse.jdt.launching.JRE_CONTAINER')) {
                def resolution = '0'; // Accessible
                source.accessRules.add(new org.gradle.plugins.ide.eclipse.model.AccessRule(resolution, 'javafx/**'))

                resolution = '1'; // Forbidden
                source.accessRules.add(new org.gradle.plugins.ide.eclipse.model.AccessRule(resolution, 'fmg/swing/**'))
                source.accessRules.add(new org.gradle.plugins.ide.eclipse.model.AccessRule(resolution, 'java/awt/**'))
                source.accessRules.add(new org.gradle.plugins.ide.eclipse.model.AccessRule(resolution, 'javax/swing/**'))
            }
        }
    }
}
